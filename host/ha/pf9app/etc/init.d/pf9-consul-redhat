#!/bin/sh
# Copyright (c) 2019 Platform9 Systems Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
### BEGIN INIT INFO
# Provides: consul
# Required-Start: $network
# Required-Stop: $network
# Default-Start: 3 5
# Default-Stop: 0 1 2 6
# Description: Start consul as a Platform9 service
### END INIT INFO

# read & export proxy information
. /etc/environment

# This init script is not compatible with systemctl
export SYSTEMCTL_SKIP_REDIRECT=1

SHORT_NAME="consul"
svcname="pf9-${SHORT_NAME}"

SERVER_BIN="/usr/bin/consul"

SERVER_OPTS="agent -config-dir /opt/pf9/etc/pf9-consul/conf.d/"

SERVER_LOGFILE=/var/log/pf9/${svcname}.log

PIDFILE=/var/run/${svcname}/${svcname}.pid
LOCKFILE=/var/lock/subsys/$svcname
PYTHON_EGG_CACHE=/tmp/python-eggs

# Source function library.
. /etc/init.d/functions


RETVAL=0
uid=`id | cut -d\( -f1 | cut -d= -f2`

# Ulimit settings
ULIMIT_NOFILE=65536

apply_prlimit() {
    pid=$(cat $PIDFILE)
    sudo prlimit --pid $pid --nofile=$ULIMIT_NOFILE
}

start_process() {

    # Only root can start the service
    [ $uid -ne 0 ] && exit 4

    mkdir -p `dirname $PIDFILE`
    touch $PIDFILE
    chown pf9:pf9group $PIDFILE
    mkdir -p `dirname $SERVER_LOGFILE`
    touch $SERVER_LOGFILE
    chown pf9:pf9group $SERVER_LOGFILE

    daemon --user pf9 "$SERVER_BIN $SERVER_OPTS >> $SERVER_LOGFILE 2>&1 &"

    RETVAL=$?
    pid=`pidofproc $SHORT_NAME`
    echo $pid > $PIDFILE
    if [ "$RETVAL" -eq "0" ]; then
        echo "Started:" "$svcname"
	apply_prlimit
        touch $LOCKFILE
    else
        echo "Failed to start:" "$svcname"
    fi
    return $RETVAL
}

stop_process() {

    killproc -p $PIDFILE $SERVER_BIN -TERM
    RETVAL=$?
    if [ "$RETVAL" -eq "0" ]; then
        echo "Stopped:" "$svcname"
        rm -f $PIDFILE
        rm -f $LOCKFILE
    else
        echo "Failed to stop:" "$svcname"
    fi
    return $RETVAL
}

status_query() {
    status $SHORT_NAME
}

# See how we were called.
case "$1" in
    start)
        start_process
        RETVAL=$?
        ;;
    stop)
        stop_process
        RETVAL=$?
        ;;
    status)
        status_query
        RETVAL=$?
        ;;
    restart | reload | force-reload)
        stop_process
        start_process
        RETVAL=$?
        ;;
    condrestart | try-restart)
        if status_query > /dev/null; then
            stop_process
            start_process
            RETVAL=$?
        fi
        ;;
    *)
        echo "Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart|try-restart}"
        RETVAL=2
        ;;
esac

exit $RETVAL
