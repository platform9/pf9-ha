#!/bin/sh
# Copyright (c) 2019 Platform9 Systems Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
### BEGIN INIT INFO
# Provides: consul
# Required-Start: $network
# Required-Stop: $network
# Default-Start: 3 5
# Default-Stop: 0 1 2 6
# Description: Start the consul as a Platform9 service
### END INIT INFO

# read & export proxy information
. /etc/environment

SHORT_NAME="consul"
svcname="pf9-${SHORT_NAME}"

SERVER_BIN="/usr/bin/consul"

SERVER_OPTS="agent -config-dir /opt/pf9/etc/pf9-consul/conf.d"

SERVER_LOGFILE=/var/log/pf9/${svcname}.log

PIDFILE=/var/run/${svcname}/${svcname}.pid
PYTHON_EGG_CACHE=/tmp/python-eggs

# Source function library.
. /lib/lsb/init-functions


RETVAL=0
uid=`id | cut -d\( -f1 | cut -d= -f2`

# Ulimit settings
ULIMIT_NOFILE=65536

apply_prlimit() {
    pid=$(cat $PIDFILE)
    sudo prlimit --pid $pid --nofile=$ULIMIT_NOFILE
}

start() {

   # Only root can start the service
    [ $uid -ne 0 ] && exit 4
    mkdir -p `dirname $PIDFILE`
    touch $PIDFILE
    mkdir -p `dirname $SERVER_LOGFILE`
    /sbin/start-stop-daemon --start --name $svcname --quiet --pidfile $PIDFILE --exec $SERVER_BIN --chuid pf9 --make-pidfile -- $SERVER_OPTS > $SERVER_LOGFILE &
    RETVAL=$?
    if [ "$RETVAL" -eq "0" ]; then
        log_success_msg "Started:" "$svcname"
	apply_prlimit
    else
        log_failure_msg "Failed to start:" "$svcname"
    fi
    return $RETVAL
}

stop() {

    start-stop-daemon --stop --oknodo --retry=0/30/KILL/5 --pidfile $PIDFILE --exec $SERVER_BIN
    RETVAL=$?
    if [ "$RETVAL" -eq "0" ]; then
        log_success_msg "Stopped:" "$svcname"
        rm -f $PIDFILE
    else
        log_failure_msg "Failed to stop:" "$svcname"
    fi
    return $RETVAL
}

status() {
    status_of_proc $SHORT_NAME $svcname
}

# See how we were called.
case "$1" in
    start)
        start
        RETVAL=$?
        ;;
    stop)
        stop
        RETVAL=$?
        ;;
    status)
        status
        RETVAL=$?
        ;;
    restart | reload | force-reload)
        stop
        start
        RETVAL=$?
        ;;
    condrestart | try-restart)
        if status > /dev/null; then
            stop
            start
            RETVAL=$?
        fi
        ;;
    *)
        echo "Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart|try-restart}"
        RETVAL=2
        ;;
esac

exit $RETVAL
